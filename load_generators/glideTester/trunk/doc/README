=== Creators ===

Igor Sfiligoi <isfiligoi@ucsd.edu>
Christopher Theissen <ctheisse@ucsd.edu>
University of California, San Diego
Release Date: January 29, 2010


=== Description ===

The Condor daemons and the glideinWMS glidein
factory daemon are used unmodified, and configured and
operated as suggested by the glideinWMS manuals. All the
Condor monitoring and debugging features are thus
available.

The tester daemon itself is written in Python[11], the
same language used by the glideinWMS. This allowed us to
use the same libraries the glideinWMS frontend uses
internally for both the communication with the glideinWMS
factory and for the interaction with the Condor daemons.
All interaction with the tester is based on configuration
files. Simple ASCII files, composed of key = value lines are
used. Comments are of course supported.

Our daemon does not assume anything about the test
jobs; it only submits them and saves the output. In order to
prevent data loss, a separate subdirectory is created for each
instance of the test jobs. Moreover, to keep bookkeeping
manageable, the job directories are grouped by the
concurrency level.

Analysis of the output of the tests is beyond the current
scope of the framework, although may be implemented in
the future. However, the tester daemon does provide the exit
status of the test jobs for each completed concurrency level.


=== Installation ===

You must have the collector and schedd components of glideinWMS
installed. Install package with instructions can be found at:

http://www.uscms.org/SoftwareComputing/Grid/WMS/glideinWMS/

* Basic Installation *

(1) Run createTesterWebStruct.py to create the required 
frontend files.

Note: Make sure you relax your firewall rules to allow the 
collector and schedd to communicate with the required nodes.

(2) Create a glideTester.cfg and a parameters.cfg in /etc; 
templates are provided.

(3) Run glideTester.py


=== Changelog ===

2/26/10 - Added parsing and summaries to glideTester


